# File: bao_cao_nhanh.py

import streamlit as st
import pandas as pd
from io import BytesIO
from docx import Document
from docx.shared import Inches
from pptx import Presentation
from pptx.util import Inches
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np

# ====================== C·∫§U H√åNH GIAO DI·ªÜN ========================
st.set_page_config(page_title="üìë B√°o c√°o nhanh", layout="wide")

st.markdown("""
    <style>
        .main .block-container {
            padding-top: 20px;
            padding-bottom: 0px;
        }
        .stButton button {
            border-radius: 12px;
            box-shadow: 1px 1px 5px rgba(0,0,0,0.2);
            transition: 0.2s;
        }
        .stButton button:hover {
            transform: scale(1.02);
            background-color: #0d6efd;
            color: white;
        }
    </style>
""", unsafe_allow_html=True)

# ====================== KHUNG GIAO DI·ªÜN CH√çNH ========================

with st.expander("üìÅ Ch·ªçn lo·∫°i b√°o c√°o v√† m·∫´u (thu g·ªçn/m·ªü r·ªông)", expanded=True):
    loai_bao_cao = st.selectbox("Ch·ªçn lo·∫°i b√°o c√°o:", [
        "T·ªïn th·∫•t", "S·ª± c·ªë", "SXKD", "C√¥ng ƒëo√†n", "ATVSV", "QLVH"])

    mau_bao_cao = st.selectbox("Ch·ªçn m·∫´u b√°o c√°o:", [
        "Mau_TonThat_1.docx", "Mau_SuCo_ThietBi.docx",
        "Mau_SXKD_Quy1.docx", "Mau_CongDoan.docx",
        "Mau_ATVSV.docx", "Mau_QLVH.pptx"])

with st.expander("üìÇ T·∫£i d·ªØ li·ªáu ƒë·∫ßu v√†o + ·∫£nh/video minh h·ªça", expanded=True):
    data_file = st.file_uploader("üóÇ T·∫£i d·ªØ li·ªáu (Excel/Word)", type=["xlsx", "xls", "csv", "docx"])
    media_files = st.file_uploader("üñº T·∫£i ·∫£nh/video minh h·ªça", type=["png", "jpg", "jpeg", "mp4"], accept_multiple_files=True)

# ====================== X·ª¨ L√ù T·∫†O B√ÅO C√ÅO ========================
if st.button("üöÄ T·∫°o b√°o c√°o th·ª≠ nghi·ªám"):
    if mau_bao_cao.endswith(".docx"):
        doc = Document()
        doc.add_heading("B√ÅO C√ÅO NHANH", 0)

        if data_file is not None:
            try:
                df = pd.read_excel(data_file)
                st.success("ƒê√£ ƒë·ªçc d·ªØ li·ªáu Excel th√†nh c√¥ng!")

                # V·∫Ω bi·ªÉu ƒë·ªì 3D c·ªôt
                fig = plt.figure()
                ax = fig.add_subplot(111, projection='3d')
                xs = np.arange(len(df))
                ys = np.zeros(len(df))
                zs = np.zeros(len(df))
                dx = dy = 0.5
                heights = df.iloc[:, 1]
                ax.bar3d(xs, ys, zs, dx, dy, heights, shade=True)
                for i, h in enumerate(heights):
                    ax.text(xs[i], ys[i], h, str(h), ha='center')
                fig_path = "bieu_do_3d.png"
                fig.savefig(fig_path)
                doc.add_paragraph("Bi·ªÉu ƒë·ªì minh h·ªça d·ªØ li·ªáu:")
                doc.add_picture(fig_path, width=Inches(5))
            except Exception as e:
                st.error(f"L·ªói x·ª≠ l√Ω d·ªØ li·ªáu: {e}")

        if media_files:
            doc.add_heading("H√¨nh ·∫£nh minh h·ªça", level=2)
            for mf in media_files:
                if mf.type.startswith("image"):
                    img_stream = BytesIO(mf.read())
                    doc.add_picture(img_stream, width=Inches(4))
                    doc.add_paragraph(f"·∫¢nh: {mf.name}")
                elif mf.type.startswith("video"):
                    doc.add_paragraph(f"[Video ƒë√≠nh k√®m: {mf.name}]")

        output_path = "BaoCaoNhanh.docx"
        doc.save(output_path)
        st.success("‚úÖ ƒê√£ t·∫°o xong b·∫£n b√°o c√°o nh√°p (.docx)")
        with open(output_path, "rb") as f:
            st.download_button("üì• T·∫£i b√°o c√°o .docx", f, file_name=output_path)

    elif mau_bao_cao.endswith(".pptx"):
        prs = Presentation()
        slide = prs.slides.add_slide(prs.slide_layouts[5])
        title = slide.shapes.title
        title.text = "B√ÅO C√ÅO NHANH - D·ªÆ LI·ªÜU MINH H·ªåA"

        if media_files:
            for mf in media_files:
                if mf.type.startswith("image"):
                    img_stream = BytesIO(mf.read())
                    slide.shapes.add_picture(img_stream, Inches(1), Inches(2), height=Inches(3))
                elif mf.type.startswith("video"):
                    txBox = slide.shapes.add_textbox(Inches(1), Inches(5), Inches(5), Inches(1))
                    txBox.text = f"Video: {mf.name} (kh√¥ng ch√®n ƒë∆∞·ª£c trong b·∫£n demo)"

        output_path = "BaoCaoNhanh.pptx"
        prs.save(output_path)
        st.success("‚úÖ ƒê√£ t·∫°o xong b·∫£n b√°o c√°o nh√°p (.pptx)")
        with open(output_path, "rb") as f:
            st.download_button("üì• T·∫£i b√°o c√°o .pptx", f, file_name=output_path)

# ====================== K·∫æT ========================
st.info("Ch·ª©c nƒÉng ƒëang trong giai ƒëo·∫°n th·ª≠ nghi·ªám. G√≥p √Ω c·ªßa anh Long s·∫Ω gi√∫p M·∫Øt N√¢u ho√†n thi·ªán t·ªët h∆°n!")
