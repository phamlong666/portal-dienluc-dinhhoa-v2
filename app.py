
import streamlit as st
import pandas as pd
import os
import io
from datetime import date, time, datetime
from PIL import Image

st.set_page_config(page_title="C·ªïng ƒëi·ªÅu h√†nh s·ªë - ph·∫ßn m·ªÅm ƒêi·ªán l·ª±c ƒê·ªãnh H√≥a", layout="wide")

# ===== FILE L∆ØU D·ªÆ LI·ªÜU =====
REMINDERS_FILE = "nhac_viec.csv"
MEETINGS_FILE = "lich_su_cuoc_hop.csv"
UPLOAD_FOLDER = "uploaded_files"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

EMAIL_MAC_DINH = "phamlong666@gmail.com"

# ===== N√öT NH·∫ÆC VI·ªÜC =====
st.header("‚è∞ Nh·∫Øc vi·ªác")

# T·∫°o m·ªõi danh s√°ch
if st.button("üÜï T·∫°o m·ªõi danh s√°ch nh·∫Øc vi·ªác"):
    df = pd.DataFrame(columns=["Vi·ªác", "Ng√†y", "Gi·ªù", "Email"])
    df.to_csv(REMINDERS_FILE, index=False)
    st.success("‚úÖ ƒê√£ kh·ªüi t·∫°o danh s√°ch.")

# Th√™m vi·ªác
with st.expander("‚ûï Th√™m vi·ªác c·∫ßn nh·∫Øc"):
    with st.form("form_nhac"):
        viec = st.text_input("üîî Vi·ªác c·∫ßn nh·∫Øc")
        ngay = st.date_input("üìÖ Ng√†y", date.today())
        gio = st.time_input("‚è∞ Gi·ªù", time(7, 30))
        email = st.text_input("üìß G·ª≠i t·ªõi", value=EMAIL_MAC_DINH)
        submit = st.form_submit_button("üìå T·∫°o nh·∫Øc vi·ªác")
    if submit:
        new_row = {
            "Vi·ªác": viec,
            "Ng√†y": ngay.strftime("%d/%m/%y"),
            "Gi·ªù": gio.strftime("%H:%M"),
            "Email": email
        }
        df = pd.read_csv(REMINDERS_FILE) if os.path.exists(REMINDERS_FILE) else pd.DataFrame()
        df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
        df.to_csv(REMINDERS_FILE, index=False)
        st.success("‚úÖ ƒê√£ t·∫°o nh·∫Øc vi·ªác.")

# Hi·ªÉn th·ªã & x√≥a
if os.path.exists(REMINDERS_FILE):
    st.subheader("üìã Danh s√°ch nh·∫Øc vi·ªác")
    try:
        df = pd.read_csv(REMINDERS_FILE, dtype=str)
        for idx, row in df.iterrows():
            col1, col2 = st.columns([6,1])
            with col1:
                st.write(f"üìå **{row['Vi·ªác']}** l√∫c {row['Gi·ªù']} ng√†y {row['Ng√†y']} ‚Üí {row['Email']}")
            with col2:
                if st.button("‚ùå", key=f"xoa_{idx}"):
                    df.drop(index=idx, inplace=True)
                    df.to_csv(REMINDERS_FILE, index=False)
                    st.rerun()
    except Exception as e:
        st.error(f"‚ùå L·ªói khi hi·ªÉn th·ªã nh·∫Øc vi·ªác: {e}")

# Xu·∫•t / Nh·∫≠p Excel
st.markdown("### üì§ Xu·∫•t / Nh·∫≠p Excel (Nh·∫Øc vi·ªác)")
col1, col2 = st.columns(2)

with col1:
    if os.path.exists(REMINDERS_FILE):
        df_export = pd.read_csv(REMINDERS_FILE)
        towrite = io.BytesIO()
        with pd.ExcelWriter(towrite, engine='xlsxwriter') as writer:
            df_export.to_excel(writer, index=False, sheet_name='NhacViec')
        st.download_button("üì• T·∫£i Excel", data=towrite.getvalue(), file_name="nhac_viec.xlsx")

with col2:
    file = st.file_uploader("üìÇ Nh·∫≠p t·ª´ Excel", type=["xlsx"], key="upload_nhacviec")
    if file:
        try:
            df = pd.read_excel(file, dtype=str)
            # Chu·∫©n ho√° ng√†y gi·ªù n·∫øu c√≥ th·ªÉ
            df["Ng√†y"] = pd.to_datetime(df["Ng√†y"], errors="coerce").dt.strftime("%d/%m/%y")
            df["Gi·ªù"] = df["Gi·ªù"].fillna("00:00")
            df.to_csv(REMINDERS_FILE, index=False)
            st.success("‚úÖ ƒê√£ nh·∫≠p l·∫°i danh s√°ch.")
            st.rerun()
        except Exception as e:
            st.error(f"‚ùå L·ªói khi nh·∫≠p file Excel: {e}")

# ===== N√öT PH·ª§C V·ª§ H·ªåP =====
st.header("üìë Ph·ª•c v·ª• h·ªçp")

with st.expander("‚ûï Th√™m cu·ªôc h·ªçp m·ªõi"):
    with st.form("form_hop"):
        ten = st.text_input("üìå T√™n cu·ªôc h·ªçp")
        ngay = st.date_input("üìÖ Ng√†y h·ªçp")
        gio = st.time_input("‚è∞ Gi·ªù h·ªçp", time(8, 0))
        noidung = st.text_area("üìù N·ªôi dung")
        files = st.file_uploader("üìé ƒê√≠nh k√®m", accept_multiple_files=True)
        submit = st.form_submit_button("üíæ L∆∞u cu·ªôc h·ªçp")
    if submit:
        try:
            file_names = []
            for f in files:
                file_path = os.path.join(UPLOAD_FOLDER, f.name)
                with open(file_path, "wb") as out:
                    out.write(f.read())
                file_names.append(f.name)
            new_row = {
                "Ng√†y": ngay.strftime("%d/%m/%y"),
                "Gi·ªù": gio.strftime("%H:%M"),
                "T√™n cu·ªôc h·ªçp": ten,
                "N·ªôi dung": noidung,
                "T·ªáp": ";".join(file_names)
            }
            df = pd.read_csv(MEETINGS_FILE) if os.path.exists(MEETINGS_FILE) else pd.DataFrame()
            df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
            df.to_csv(MEETINGS_FILE, index=False)
            st.success("‚úÖ ƒê√£ l∆∞u cu·ªôc h·ªçp.")
            st.rerun()
        except Exception as e:
            st.error(f"‚ùå L·ªói khi l∆∞u cu·ªôc h·ªçp: {e}")

# Hi·ªÉn th·ªã & Xo√° h·ªçp
if os.path.exists(MEETINGS_FILE):
    st.subheader("üìö Danh s√°ch cu·ªôc h·ªçp")
    try:
        df = pd.read_csv(MEETINGS_FILE)
        for idx, row in df.iterrows():
            with st.expander(f"üìå {row['T√™n cu·ªôc h·ªçp']} ‚Äì {row['Ng√†y']} {row['Gi·ªù']}"):
                st.write("üìù", row["N·ªôi dung"])
                file_list = str(row.get("T·ªáp", "")).split(";")
                for file in file_list:
                    file_path = os.path.join(UPLOAD_FOLDER, file)
                    if os.path.exists(file_path):
                        st.write(f"üìé {file}")
                        with open(file_path, "rb") as f:
                            st.download_button("‚¨áÔ∏è T·∫£i", f.read(), file_name=file, key=f"{file}_{idx}")
                with st.form(f"form_xoa_{idx}"):
                    confirm = st.checkbox("üóëÔ∏è X√≥a", key=f"xoa_ck_{idx}")
                    do_delete = st.form_submit_button("‚ùó X√°c nh·∫≠n")
                    if confirm and do_delete:
                        df.drop(index=idx, inplace=True)
                        df.to_csv(MEETINGS_FILE, index=False)
                        st.success("üóëÔ∏è ƒê√£ xo√°.")
                        st.rerun()
    except Exception as e:
        st.error(f"‚ùå L·ªói khi hi·ªÉn th·ªã cu·ªôc h·ªçp: {e}")

# Xu·∫•t / Nh·∫≠p Excel
st.markdown("### üì§ Xu·∫•t / Nh·∫≠p Excel (Ph·ª•c v·ª• h·ªçp)")
col3, col4 = st.columns(2)

with col3:
    if os.path.exists(MEETINGS_FILE):
        df_export = pd.read_csv(MEETINGS_FILE)
        towrite2 = io.BytesIO()
        with pd.ExcelWriter(towrite2, engine='xlsxwriter') as writer:
            df_export.to_excel(writer, index=False, sheet_name='CuocHop')
        st.download_button("üì• T·∫£i Excel", data=towrite2.getvalue(), file_name="phuc_vu_hop.xlsx")

with col4:
    file = st.file_uploader("üìÇ Nh·∫≠p t·ª´ Excel", type=["xlsx"], key="upload_hop")
    if file:
        try:
            df = pd.read_excel(file, dtype=str)
            df.to_csv(MEETINGS_FILE, index=False)
            st.success("‚úÖ ƒê√£ nh·∫≠p l·∫°i danh s√°ch.")
            st.rerun()
        except Exception as e:
            st.error(f"‚ùå L·ªói khi nh·∫≠p file Excel: {e}")
